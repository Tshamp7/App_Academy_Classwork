exit
display pos
display start_pos
n
display cur_col
displayh cur_col
display cur_row
display moves
display col
display row
exit
continue
next
step
next
n
display i
n
display i
n
display all_moves[i]
display all_moves
display board
next
display moves
next
continue
step
n
display all_moves
exit
n
display self[end_pos].pos
n
step
display self[end_pos]
n
display moves
next
display pos
next
step
display self.in_check_move
display self[start_pos].moves
next
continue
display end_pos
display start_pos
display color
continue
exit
next
display row == 1
display col.zero?
n
step
n
step
n
display moves
display col
display row
n
display all_moves
exit
n
step
n
display all_moves
exit
n
step
n
display all_moves
display self.in_check?(piece.color)
exit
n
step
n
display all_moves
n
display non_check_moves
exit
n
display self.in_check?(piece.color)
step
n
display non_check_moves
display non_check_move
display all_moves
display move
exit
display piece
display move
display non_check_moves
display all_moves
continue
n
display moves
display cur_y
display cur_x
display pos
exit
continue
continut
continue
n
display board.valid_pos?(pos)
n
display moves
display pos
displayh moves
n
display cur_y
display cur_x
exit
n
display output
exit
n
board.valid_pos?(pos)
n
nn
n
display pos
display output
exit
n
display output
exit
n
display output
display cur_col
display cur_row
exit
n
display output
display curr_col
display curr_row
display pos
exit
n
ste[
n
display board.board[pos[0]][pos[1]].color
display color
n
nn
n
nn
n
display output
display pos
display curr_col
display curr_row
exit
display pos
display col
display row
n
step
n
display board.valid_pos?(pos)
display pos
display output
n
display moves
n
display moves
exit
n
display moves
exit
n
display moves
continue
n
display moves
n
display curr_y
display curr_x
display pos
n
continue
exit
n
display board.is_empty?(pos)
n
nn
n
display pos
display moves
continue
n
display new_pos
n
display new_y
display new_x
display curr_y
display curr_x
n
display board.valid_pos?(pos)
display moves
